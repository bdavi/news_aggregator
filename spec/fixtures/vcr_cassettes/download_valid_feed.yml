---
http_interactions:
- request:
    method: get
    uri: https://www.reutersagency.com/feed/?post_type=best&taxonomy=best-topics
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Sun, 22 Nov 2020 08:23:48 GMT
      Content-Type:
      - application/rss+xml; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Keep-Alive:
      - timeout=20
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      - Accept-Encoding
      Last-Modified:
      - Fri, 20 Nov 2020 16:55:56 GMT
      Link:
      - <https://www.reutersagency.com/wp-json/>; rel="https://api.w.org/"
      X-Powered-By:
      - WP Engine
      X-Cacheable:
      - 'CacheAlways: feed'
      Cache-Control:
      - max-age=600, must-revalidate
      Etag:
      - W/"e6689147755e190acebc947d6f52abd2-gzip"
      X-Cache:
      - 'HIT: 3'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 22 Nov 2020 08:23:48 GMT
recorded_with: VCR 6.0.0
